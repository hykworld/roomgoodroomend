buildscript {
	ext {
		queryDslVersion = "5.0.0"
	}
}

plugins {
	id 'java'
	id 'war'
	id 'org.springframework.boot' version '3.2.3'
	id 'io.spring.dependency-management' version '1.1.4'
}

group = 'org.zerock'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.projectlombok:lombok'
	providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

	//어노테이션 쓸라고 넣음 @NotNull @MAX, @MIN 같은거
	implementation 'javax.validation:validation-api:2.0.1.Final'

//	runtimeOnly 'com.mysql:mysql-connector-j'

	//이메일/////이메일/////이메일/////이메일/////이메일/////이메일/////이메일///
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation group: 'org.springframework.boot', name: 'spring-boot-starter-mail', version: '3.2.4'
	implementation group: 'javax.validation', name: 'validation-api', version: '2.0.1.Final'

	//이메일.end/////이메일/////이메일/////이메일/////이메일/////이메일/////이메일/////이메일///

	//MariaDB/////////////////////////////////////////////////////////////////////////////////////
	// https://mvnrepository.com/artifact/org.mariadb.jdbc/mariadb-java-client
//	implementation group: 'org.mariadb.jdbc', name: 'mariadb-java-client', version: '3.3.3'
	///////////////////////////////////////////////////////////////////////////////////////

//
//	////mySQL/////////////////////////////////////////////////////////////////////////////////////
//	// https://mvnrepository.com/artifact/com.mysql/mysql-connector-j
	implementation group: 'com.mysql', name: 'mysql-connector-j', version: '8.3.0'
//	/////////////////////////////////////////////////////////////////////////////////////////


	// https://mvnrepository.com/artifact/org.thymeleaf.extras/thymeleaf-extras-java8time
	implementation group: 'org.thymeleaf.extras', name: 'thymeleaf-extras-java8time', version: '3.0.4.RELEASE'

	// https://mvnrepository.com/artifact/net.coobird/thumbnailator
	implementation group: 'net.coobird', name: 'thumbnailator', version: '0.4.20'

	implementation "com.querydsl:querydsl-jpa:${queryDslVersion}:jakarta"


	annotationProcessor(

			"jakarta.persistence:jakarta.persistence-api",

			"jakarta.annotation:jakarta.annotation-api",

			"com.querydsl:querydsl-apt:${queryDslVersion}:jakarta")

}

tasks.named('test') {
	useJUnitPlatform()
}


sourceSets {
	main {
		java {
			srcDirs = ["$projectDir/src/main/java", "$projectDir/build/generated"]
		}
	}
}

compileJava.dependsOn('clean')